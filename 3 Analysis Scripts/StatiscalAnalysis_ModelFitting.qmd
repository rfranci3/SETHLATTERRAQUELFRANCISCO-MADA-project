---
title: "StatiscalAnalysis_ModelFitting"
format: html
editor: visual
---

# Ciconia ciconia analysis script

#### this script loads the processed, cleaned data, does a simple analysis and saves the results to the results folder

```{r, warning=FALSE, message=FALSE}
#load needed packages. make sure they are installed.
library(ggplot2) #for plotting
library(ggeffects) #to explore plots  
library(broom) #for cleaning up output from lm()
library(broom.mixed) #for cleaning up output from lmer()
library(here) #for data loading/saving
library(multilevelmod) #mixed effect models
library(tidymodels)
library(lme4)
library(sjPlot) #to help plot models
library(performance) #evaluate model fit and performance
library(see)
library(cAIC4)

#path to data
data_location <- here::here("2 Clean Data","stork_AMR_2021.rds")

#load data. 
data <- readRDS(data_location)
```

## Data fitting/statistical analysis

Data of interest: Landfill use index (LUI) and multi-drug resistence (MDR) throughout the different sampling periods during the stork breeding season.

We'll start by fitting two models. We will used mixed-effects models to control for repeated sampling of the same nest. The design is unbalanced, thus we cannot use a repeated measures anova.

We'll start with a single factor repeated measures evaluation the effect of LUI on blaTEM (betalactam) resistence gene burden.

```{r}
data(data, package = "lme4")

facet_plot <- data %>% 
  ggplot(aes(x = samp, y = Burden)) + 
  geom_point() + 
  geom_line() +
  facet_wrap(~ nes) 
facet_plot

png(file = here('5 Manuscript','manuscript','supplement', 'Supplementary_Material_files', 'facet_plot.png'))
facet_plot
dev.off() 
```

No obvious trends...

Build models using lmer and glmer

```{r}
lmer_spec <- 
  linear_reg() %>% 
  set_engine("lmer")

glmer_spec <- 
  logistic_reg() %>% 
  set_engine("glmer")

```

Multi-drug resistance (0,1 data) vs All

```{r}
glmer_fit_null <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ (1|nes), data = data)

glmer_fit_global <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.lui + s.age + samp + s.nsuccess +(1|nes), data = data)

#Univariate models
glmer_fit_1 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.lui +(1|nes), data = data)

glmer_fit_2 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.age  +(1|nes), data = data)

glmer_fit_3 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ samp +(1|nes), data = data)

glmer_fit_4 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.nsuccess +(1|nes), data = data)

#Multivariate models

glmer_fit_5 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.lui + samp +(1|nes), data = data)

glmer_fit_6 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.lui + s.nsuccess +(1|nes), data = data)

glmer_fit_7 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ samp + s.nsuccess +(1|nes), data = data)

glmer_fit_8 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.lui*s.age + samp + s.nsuccess +(1|nes), data = data)

glmer_fit_9 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.lui + s.age*samp + s.nsuccess +(1|nes), data = data)

glmer_fit_10 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.lui + s.age + samp*s.nsuccess +(1|nes), data = data)

glmer_fit_11 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.lui + s.age +(1|nes), data = data)

glmer_fit_12 <- 
  glmer_spec %>% 
  fit(as.factor(MDR) ~ s.lui + s.age +  s.nsuccess +(1|nes), data = data)
```

Use AIC to see the best model; None look great...

```{r}
AIC_table1 <- compare_performance(glmer_fit_null,glmer_fit_global, glmer_fit_1, glmer_fit_2, glmer_fit_3, glmer_fit_4, glmer_fit_5, glmer_fit_6, glmer_fit_7, glmer_fit_8, glmer_fit_9, glmer_fit_10, glmer_fit_11, glmer_fit_12, rank = TRUE, metrics="AICc")

print(AIC_table1)

AIC_table1 %>%
  saveRDS(here("4 Results","Tables", "ModelAIC1.rds"))

glmer_indices <- plot(compare_performance(glmer_fit_null,glmer_fit_global, glmer_fit_1, glmer_fit_2, glmer_fit_3, glmer_fit_4, glmer_fit_5, glmer_fit_6, glmer_fit_7, glmer_fit_8, glmer_fit_9, glmer_fit_10, glmer_fit_11, glmer_fit_12))

#Tiff 
tiff(file = here('5 Manuscript','manuscript','Images', 'glmer_indices.tiff'))
glmer_indices
dev.off() 
```

Summarize and graph best model (lowwest AIC)

```{r}
glmer_check <- check_model(glmer_fit_11)

png(file = here('5 Manuscript','manuscript','supplement', 'Supplementary_Material_files', 'glmer_check.png'))
glmer_check
dev.off() 

# place results from fit into a data frame with the tidy function

model1 <- broom::tidy(glmer_fit_11)
print(model1)

# save fit results table  
model1 %>%
  saveRDS(here("4 Results", "Models", "GLMERmodel1.rds"))

MLp <- plot_model(glmer_fit_11,terms = 's.lui', type="pred", 
           show.data = TRUE, show.values = TRUE, show.p = TRUE,
           title = "", show.legend = TRUE, line.size=1,
           axis.title = c("Landfill Use Index",'Multi-Drug Resistence'))
##Not working... fix later
  while (!is.null(dev.list()))  dev.off()
#Tiff 
tiff(file = here('5 Manuscript','manuscript','Images', 'LUIvsMDR_LME.tiff'))
MLp
dev.off() 
```

AMR Gene Burden vs All

```{r}
lmer_fit2_null <- #singular
  lmer_spec %>% 
  fit(Burden ~ (1|nes), data = data)

lmer_fit2_global <- 
  lmer_spec %>% 
  fit(Burden ~ s.lui + s.age + samp + s.nsuccess +(1|nes), data = data) #overfit

#Univariate models
lmer_fit2_1 <- 
  lmer_spec %>% 
  fit(Burden ~ s.lui +(1|nes), data = data)

lmer_fit2_2 <- 
  lmer_spec %>% 
  fit(Burden ~ s.age  +(1|nes), data = data) #overfit

lmer_fit2_3 <- 
  lmer_spec %>% 
  fit(Burden ~ samp +(1|nes), data = data)

lmer_fit2_4 <- 
  lmer_spec %>% 
  fit(Burden ~ s.nsuccess +(1|nes), data = data)

lmer_fit2_5 <- 
  lmer_spec %>% 
  fit(Burden ~ s.lui + samp +(1|nes), data = data)

lmer_fit2_6 <- 
  lmer_spec %>% 
  fit(Burden ~ s.lui + s.nsuccess +(1|nes), data = data)

lmer_fit2_7 <- 
  lmer_spec %>% 
  fit(Burden ~ samp + s.nsuccess +(1|nes), data = data)

lmer_fit2_8 <- 
  lmer_spec %>% 
  fit(Burden ~ s.lui*s.age + samp + s.nsuccess +(1|nes), data = data) #overfit

lmer_fit2_9 <- 
  lmer_spec %>% 
  fit(Burden ~ s.lui + s.age*samp + s.nsuccess +(1|nes), data = data) #overfit

lmer_fit2_10 <- 
  lmer_spec %>% 
  fit(Burden ~ s.lui + s.age + samp*s.nsuccess +(1|nes), data = data) #overfit

lmer_fit2_11 <- 
  lmer_spec %>% 
  fit(Burden ~ s.lui + s.age + s.nsuccess +(1|nes), data = data) #overfit

lmer_fit2_12 <- 
  lmer_spec %>% 
  fit(Burden ~ s.lui + s.age +(1|nes), data = data) #overfit

#Standardizing variables helped with the overfit/singular model results
```

Use AIC to see the best model

```{r}
AIC_table2 <- compare_performance(lmer_fit2_null, lmer_fit2_global, lmer_fit2_1, lmer_fit2_2, lmer_fit2_3, lmer_fit2_4, lmer_fit2_5, lmer_fit2_6, lmer_fit2_7, lmer_fit2_8,
                                  lmer_fit2_9, lmer_fit2_10, lmer_fit2_11, lmer_fit2_12, rank = TRUE, metrics="AICc")

print(AIC_table2)

AIC_table2 %>%
 saveRDS(here("4 Results","Tables", "ModelAIC2.rds"))

lmer_indices <-plot(compare_performance(lmer_fit2_null, lmer_fit2_global, lmer_fit2_1, lmer_fit2_2, lmer_fit2_3, lmer_fit2_4, lmer_fit2_5, lmer_fit2_6, lmer_fit2_7, lmer_fit2_8, lmer_fit2_9, lmer_fit2_10, lmer_fit2_11, lmer_fit2_12))

plot(compare_performance(lmer_fit2_null, lmer_fit2_global, lmer_fit2_1, lmer_fit2_2, lmer_fit2_3, lmer_fit2_4, lmer_fit2_5, lmer_fit2_6, lmer_fit2_7, lmer_fit2_8, lmer_fit2_9, lmer_fit2_10, lmer_fit2_11, lmer_fit2_12))

tiff(file = here('5 Manuscript','manuscript','Images', 'lmer_indices.tiff'))
lmer_indices
dev.off() 
  
```

Summarize and graph best model (lowwest AIC)

```{r}
lmer_check <- check_model(glmer_fit_global)
lmer_check

png(file = here('5 Manuscript','manuscript','supplement', 'Supplementary_Material_files', 'lmer_check.png'))
lmer_check
dev.off()

model2 <- broom::tidy(lmer_fit2_global)
print(model2)

# save fit results table  
model2 %>% 
  saveRDS(here("4 Results/Models/LMERmodel2.rds"))

BLp <- plot_model(lmer_fit2_global,terms = 's.lui', type="pred", 
           show.data = TRUE, show.values = TRUE, show.p = TRUE,
           title = "", show.legend = TRUE, line.size=1,
           axis.title = c("Landfill Use Index",'Total Antibiotic Resistant Gene Burden'))

while (!is.null(dev.list()))  dev.off()
#Tiff 
tiff(file = here('5 Manuscript','manuscript','Images', 'LUIvsBurden_LME.tiff'))
BLp
dev.off() 
```
